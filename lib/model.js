// This is the base definition for a model / collection// ideally used as a wrapper for database integration// should use promise objects to allow for method chaining// eventful.  emits ready event passing itself// start with mongodbmodel.exports = Model;// init references to model base objects for use by controllers// and modelsvar controller_base = require('./controller.js');controller_base.prototype.models = {};Model.prototype.models = {};var model_prot = new Model();var db;function Model(){};// TODO: set the connector for the modelModel.connector = null;Model.extend = function(constructor) {    constructor.prototype.__proto__ = model_prot;    Model.set_db_access_methods(contructor);};Model.setDB = function(db) {};Model.prototype.find = function() {    var args = Array.prototype.slice.call(arguments, 0);    return connector.find.apply(connector, args);};Model.prototype.save = function() {};Model.prototype.update = function() {};Model.prototype.destroy = function() {};